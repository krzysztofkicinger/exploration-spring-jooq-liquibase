/*
 * This file is generated by jOOQ.
*/
package com.kicinger.domain;


import com.kicinger.domain.tables.Person;
import com.kicinger.domain.tables.State;
import com.kicinger.domain.tables.records.PersonRecord;
import com.kicinger.domain.tables.records.StateRecord;

import javax.annotation.Generated;

import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.UniqueKey;
import org.jooq.impl.Internal;


/**
 * A class modelling foreign key relationships and constraints of tables of 
 * the <code>public</code> schema.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

    // -------------------------------------------------------------------------
    // IDENTITY definitions
    // -------------------------------------------------------------------------

    public static final Identity<PersonRecord, Integer> IDENTITY_PERSON = Identities0.IDENTITY_PERSON;

    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<PersonRecord> PK_PERSON = UniqueKeys0.PK_PERSON;
    public static final UniqueKey<StateRecord> STATE_PKEY = UniqueKeys0.STATE_PKEY;

    // -------------------------------------------------------------------------
    // FOREIGN KEY definitions
    // -------------------------------------------------------------------------

    public static final ForeignKey<PersonRecord, StateRecord> PERSON__FK_PERSON_STATE = ForeignKeys0.PERSON__FK_PERSON_STATE;

    // -------------------------------------------------------------------------
    // [#1459] distribute members to avoid static initialisers > 64kb
    // -------------------------------------------------------------------------

    private static class Identities0 {
        public static Identity<PersonRecord, Integer> IDENTITY_PERSON = Internal.createIdentity(Person.PERSON, Person.PERSON.ID);
    }

    private static class UniqueKeys0 {
        public static final UniqueKey<PersonRecord> PK_PERSON = Internal.createUniqueKey(Person.PERSON, "pk_person", Person.PERSON.ID);
        public static final UniqueKey<StateRecord> STATE_PKEY = Internal.createUniqueKey(State.STATE, "state_pkey", State.STATE.ID);
    }

    private static class ForeignKeys0 {
        public static final ForeignKey<PersonRecord, StateRecord> PERSON__FK_PERSON_STATE = Internal.createForeignKey(com.kicinger.domain.Keys.STATE_PKEY, Person.PERSON, "person__fk_person_state", Person.PERSON.STATE);
    }
}
